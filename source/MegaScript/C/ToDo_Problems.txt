-[Unsolved] Ternary operations break if a call end operator is next to the ternary one.
-[Unsolved] (It's something wrong with the destination pointer) (Found out it's not that, and actually is just if the function is created after another function was already made) Writing to memory directly or dereferencing causes functions with parameters to not be recognized as functions (Example: function bbbb(int a) echo(a) stop bbbb(42) Attempted to call a non function.)
-[Unsolved] No longer works in 32 bit mode. (gcc main.c -lm -m32) I may have to start making versions that are hard coded to be 32 bit.
-[Unsolved] (It's something wrong with the parser) Realloc error when scripts get too long. It's probably something wrong with the memory allocation functions again smh. It happens when defining symbols.
-[Unsolved] Performing arithmetic on data types doesn't work.
-[Known] Attempting to print the time isn't accurate since the float function uses floats instead of doubles
-[Known] Multiple line comments cause the end of statement bytecode to appear multiple times
-[Known] Attempting to assign a bool container doesn't work (I think it's because it doesn't create a real malloced address when doing bool8 test)
-[Known] Standard calls snip parenthesis off the edges. This causes precedence issues since it has no way of knowing weather it snipped the right one off or not.
-[Known] Arithmetic is always done from left to right, and the right-most value is always casted to the first. This is problematic for situations like multiplying ints by floats.
-[Fixed] Standard id calls freeze the program if called from inside a function. (Example was done with echo("hello!"))
-[Fixed] Making too many new variables causes a segmentation fault when created via a jump statement loop.
-[Fixed] Functions with parameters delete themselves (and possibly their scope) whenever they're called.
-[Fixed] Defining function pass variables breaks loops
-[Fixed] Cannot make two for loops or it breaks (Might be popping more off the stack than it needs to)
-[Fixed] Running a for loop inside a for loop causes the parent for loop to stop
-[Fixed] Enum members say they don't exist if the string is too long
-[Fixed] Failed to find the scope. math.mlib attempting to do max and have the right value as higher. The scope starting point probably should start earlier. (else cases it) (Scopes should always start at the beginning of the if statement since the statement will only ever be in one block anyway)
-[Fixed] Parser doesn't parse cast operator correctly when it's after a standard call because it removes the parenthesis
-[Fixed] Trying to do "uint64 a = (int64) (time() * 1000)" results in error "Attempted to cast to a non data type."
-[Fixed] Similar to the former problem. "uint64 a = time() * 1000" gives error "Attempted to execute an invalid bytecode." (Maybe solve this by adding the standard call end opcode)
-[Fixed] Array dimension array causes segmentation fault if removed when symbol is deleted because in arithmetic it copies old pointers.
-[Fixed] Attempting to echo(a++) freezes the program. (It is a parsing error. The source does not compile.)